Software Testing 
================

Instructor - Tapas Kumar Mishra, Shivjee Choudary 	 

------------------------------------------------------------------------------------------------------------------------------------------------------

14/09/2022
----------

--> What is a Software ?
	Software is the Collection of Programs

>> Three Types of Software

	- System Software(OS)
		Example - MacOS, Linux, Windows

	- Programming Software
		Example - Compiler for different programming Languages
	
	- Application Software
		Example - Applications like Zoom, ServiceNow 


>> Software Testing 

SDLC - Software Development Life Cycle

Software Testing is part of SDLC

--> Why do we do Software Testing ?

	- We do it to detect and identify the defects in the Software
	
--> Benifits of doing Software Testing :

	- By doing Software Testing we improve the Quality of Software
	- It also ensures that the Software is delivered on time
	- Also checks whether the Software is Within Budget
	- Ensuring Software Developed meets the requirements
	- Maintenance


-->> Types of Software Testing :

		- Manual Testing
		- Automation Testing
	

1. Manual Testing - 
		Testing is done manually
			
	Example : Producing 10 pens and testing manually whether it works or not
			  But when 10000 pens are produced it is not possible for a single person to do
			  Also the cost involved for hiring more employees is more
			  
2. Automation Testing -
		Testing is done with the help of a Pre Developed Software or any machine 

	Example : The cons in the previous example can be saved by engaging a machine and investing money on it / building a Testing Software
			  This is called Automation Testing



--> Error : It is a Human Mistake
			Example - Syntax Error

--> Bug / Defect : If some feautre is not working as per our expectation
				   Unwanted behaviour of application
				   Example - Clicking on Login and it Logging out
				
--> Failure : End User Action 
			  Example - If Status is not getting uploaded in Whatsapp we say it is a Failure


Bug / Defect - Tester's point of View
Faiure - End Users point of View


--> 10 Benifits of doing Software Testing -
	
	1. Testing at early stage of Development saves the time later
			- Better Late than never

	2. Software Testing ensures there are low/no bugs

	3. Customer Satisfaction

	4. To determine the Software performance

	5. We all make mistakes - Testing the system to rectify the mistakes

	6. Reduce Cost

	7. End users must have flawless experience 

	8. Reputation


-->> SDLC 

1. Planning and Requirement Analysis - Stakeholders, Domain Experts, Senior Members
2. Designing						 - System Architects and Developers
3. Development						 - Developers(Programmers)
4. Testing							 - Testers
5. Maintenance						 - Developers


--> Assignment -
	Prepare SRS for a client who needs Gmail like Software

Solution : 

	Requirement -

		1.




--> Types of SDLC 

	1. Waterfall Model
	2. Spiral Model
	3. V - Model

1. Waterfall Model -

		- Most Popular
		- Each Step is executed only after the previous Step is completed
		- It is simple to execute
	
	Steps in Waterfall Mode :
		- Requirements : We ask the customer a complete requirement 
						 And prepare SRS

		- Design : Helps in specifying Hardware and system requirements 
					Specifying the whole Architecture

		- Implementation : The App is divided into units(Modules)
						    At the end this will be integrated
						    Then Unit Testing is performed

		- Verification - Entire system is tested for Functional and Non Functional Tester
						 Then Product is deployed 

		- Maintenance - If some issue comes up in client environment
						It will be fixed via update etc...						   

	

	Advantage : 
		
		- Easy to understand and use
		- Each Phase has specific deliverables and review process
		- Phases are proccessed and completed one at a time
		- Suitable for small project 
	
	Disadvantage :

		- Once Application is in testing stage, it is very difficult to go back and change
		- Software cannot be deployed until all the process are completed
		- High Risk and Uncertainity
		- Not good for complex and Object Oriented Projects
		- Poor Model for long and ongoing Projects
		- Not suitable for the projects where requirements are at a moderate to high risk of changing


	When to use ?

		- Only when Requirements are well known, clear and fixed
		- Technology is understood
		- No ambiguous requirements
		- Project is short
		- Ample resources with required expertise are available freely
	

2. Spiral Model -
		- It is iterative model
		- This model overcomes the drawbacks of Waterfall model
		- Evolutionary Software Process model which is combination of an iterative nature of prototyping and systematic ascpects of Traditional Waterfall Model
		- We follow Spiral Model Whenever there is a dependency on the Modules
		- In every cycle a new software version will be released
		- Software will be released in multiple version, Therefore this model is also known as Control model
		- This kind of Model is suitable for product based company
				Example : Microsoft, Facebook, Whatsapp

	When to use ?

		- When costs and risk evaluation is important
		- For medium to high risk projects
		- Users are unsure of their needs
		- Requirements are complex
		- Significant changes are expected
	
	Four Fold Procedure :

		- Planning 
				- The objectives and constraints of the project are determined and are documented 

		- Risk Analysis
				- All possible alternatives, which can help in developing a cost effective project are analyzed
				- This phase identfies and resolves all the possible risks in the project Development
		
		- Engineering
				- The actiual development of the project is carried out
				- The output of this phase is passed through all the phases itertively in order to obtain improvements in the same

		- Customer evaluation 
				- Developed product is passes on to the customer in order to receive customer's comments and suggestions
				- This phase is very much similar to Testing Phase 

	

	Advantage :
		
		- Changing requirements can be accomodated
		- Allows for extensive use of Prototypes
		- Requirements can be captured more accurately
		- Users see the system early
		- Early and frequent feedback from users

	Disadvantage :

		- End of the project may not be known early
		- Not suitable for small or low risk projects and could be expensive for small projects
		- Project is complex
		- Spiral may go indefinitely
		- Risk Assessment expertise is required



3. V - Model -

	- It is in the form of V hence V-Model	
	- It is also known as Verification and Validation Model
	- Development of each phase is directly associated with Testing Phase
	- The next phase starts only after completion of the previous phase

Speciality of this model 
	
	We can Identify the problem at the early stage because testing happens in each stage


>> Static Testing - Testing the project related documents(reviewing, walkthrough, inspection)
					It is done before the executions


	- White Box Testing
	- Black Box Testing

>> Dynamic Testing - This is actual testing
					 This will be done after executions

		Techniques -
					- Unit Testing
					- Integration Testing
					- System Testing
					- UAT (User Acceptance Testing)


--> What is Verification ?
	Checks whether we are building the right product or not(What to build ?)
	Focuses on Documentation
	Verification is Typically involved in (reviewing, walkthrough, inspection)

--> What is Validation ?
	Checks whether we are building the product right or not(How to build ?)
	Takes place after verification are completed
	Focuses on Software
	Validation is Typically involved in actual testing (Dynamic testing)


	Advantages : 
 
		- This is a highly disciplined model and Phases are completed one at a time.
		- V-Model is used for small projects where project requirements are clear.
		- Simple and easy to understand and use.
		- This model focuses on verification and validation activities early in the life cycle thereby enhancing the probability of building an error-free and good quality product.
		- It enables project management to track progress accurately.
	
	Disadvantages : 
 
		- High risk and uncertainty.
		- It is not a good for complex and object-oriented projects.
		- It is not suitable for projects where requirements are not clear and contains high risk of changing.
		- This model does not support iteration of phases.
		- It does not easily handle concurrent events.


--> This Model is used for Small to Medium sized projects


Other Types of Models 
	
	- Incremental Model
	- RAD Model
	- Agile Model
	- Iterative Model



-->> STLC (Software Testing Life Cycle)

		- STLC is a sequence of activities conducted during testing process to ensure software quality goals are meets

	Phases of STLC - 
			
			1. Requirement Analysis			- QA interacts with various StakeHolders like client, Business Analyst, System Analyst, Technical Lead/ Development Manager 
											  Takes decision on What all tests will be performed

			2. Test Planning  				- It is a document which contains the plan related to all testing activities which needs to be done to deliver a quality product
											  Senior QA Manager determines Test Plan Strategy along with efforts and cost estimates for the project
											  The focus is to describe :
											  		- What to test ?
													- What cannot be tested ?
													- Tools used for testing ?
													- Resources
													- Test Duration
													- Risks and Contingencies Planning
													- It also contains the exit criteria
													

			3. Test Case Development		- Testing Team prepares Test cases
											  Prepares Test Data  
											  Cases reviewed by peers or QA Lead 
											  RTM(Requirement Traceability Matrix) prepared 
											  RTM is Industry accepted format for tracking requirements. We can track backward and forward Traceability
											  OOB Thinking

											
			4. Environment Setup			- Tools required for testing(Both Hardware and Software)
											- Tools like -
												Selenium
        										ATF for Seleneum
        										QTP
        										RPA
												Can be done parallel with test case development phase
												We can have multiple QA Server



			5. Test Execution				- Testers
											  Bugs are reported to Development Team
											  Development Team resolves bugs and it is retested to ensure it is bug free and ready to go live

			6. Test Closure					- After Product being delivered
											  Ensures Test completion		
											  		  Handover Test Artifacts
													  Project Retrospectives


>> Selenium - It is a browser optimized framework that is commonly used for writing end to end test for web application 


15/09/2022
----------

--> Testing - Development Point of View

	Application - Developer

- Before engaging the testing team to test the code it has to be tested by the Developer
- This Testing phase is called as the Unit Testing
		- In the Unit Testing, Developer test the functionalities he has developed

	
- Develop a code --> Test -->  



>> Testing 
	- Manual Testing
	- Automated Testing 

- Manual Testing :

	- The Software Test Engineer have to manually check every functionality and feature
	- He has to prepare the Test Cases
	- The test cases are also called as bugs
	- There is a priority associated with every bug
	- What are the user personas and how do they use the application

Exercise

	- Testing User Personas for the Medical Expense Form
		- Find out the possible personas who will be using the application 

Solution : 

	- Employee (end User): will be able to only write
	- Hospital Administration: Read, Write, update, Delete
	- Hospital Help Desk: Read, Write
	- Hospital billing Department: Read, Write, Update
	- Doctors: Read, Update(Additional Comments, not fields with payment details)
	- Insurance Help Desk: Read
	- Insurance Admin: Read, and Update comments


Exercise 

	- Access to the Application	
		- Provide access to create incidents, change, requests and problem to the users of this application 
	
Solution :

	- Giving different ITIL Roles to the Personas



Exercise 

	- Add an option for :
			- Create an Incident --> Top Left (Three Lines)
			- Create a Problem --> Near the Submit Button
			- Call Doctor --> Top Right --> This should open an request to service portal


Solution :

		Create UI Actions and insert appropriate script of Incident, Problem and Request

		Scripts can be obtained from UI Actions under Sytem Definitions


>> Test Case

Creating a Test Case Template

	- Test ID : It is also called as Issue Id, Case ID, Case No
		- Naming Convention : ProjectName_ModuleName_Number [RBT_IM_001]  
										(or)
							  ModuleName(Short)_CaseID  [IM001]

	- Issue Description 

	- Expected Output

	- Actual Output

	- Reference ID : Can be like Knowledge Article 

	- Defect ID 

	- Cycle 1 - First Round of Testing

	- Cycle 2 - Second Round of Testing

	- Comments : Our comments about the product / Application

	- Tested By : Name of the Tester

	- Date



-->> Software Testing goals

	- A good test case is one that has probability of finding any undiscovered bug
	- A good test is not redundant
	- A successful test is one that uncovers a yet discovered error
	- It should be simple, should not be complex
	- To check if the system does what it is expected to do
	- To check if the system is fit for purpose
	- To check if the system meets the requirements and be executed Successfully in the intended environment


Assignment - 

	Test Case for Login Page

Solution :
	
	In the Excel sheet - Login Page Test Case Template

Assignment - 

	Test Case for Create New Account Page in Facebook

Solution :

	In the Excel sheet - Facebook Create New Account Test Case



16/09/2022
----------

Exercise :

	Test Case for the Currency Converter 

Solution :

	In the Excel sheet - Currency Converter Test Case


Exercise :

	Test Case for School Admission Form

Solution :

	In the Excel sheet - School Admission Form Test Case


--> Writing Test Cases is an important task in software testing, software testing job responsibilities

		- Understanding and Analyzing software requirements
		- Derive Positive and Negative test scenarios
		- Document Test Cases
		- Collect Test Data
		- Execute Test Cases
		- Analyze Test results
		- Report defects
		- Track defects
		- Re & Regression Testing
		- Organize & Maintain Software Test resources
	
--> Test Case best practices 

		1. Consider Test Case based on Risk and Priority
		2. Remember the 80/20 Rule - 20 % of test will cover 80 % of your application
		3. Make sure your test cases can be completed by others when necessary
		4. The "Good Enough" test case
		5. Create Test case like you are running a marathon not a sprint
		6. List your test before you write them
		7. Classify Test Case based on Business Scenarios and functionality
		8. Not too long or too short
		9. Test drive your tests
		10. Run your tests regularly to keep them relevant




19/09/2022
----------


Exercise :

 	Create a Test Case for Incident, Change, Request


Solution :

	In Excel sheet - Incident Table Test Case

While writing the Test Case we have keep in mind the Field Type, Table, Condition based on field Visibility, 
If the Choice Option is True / Yes then we have to mention all the Choices
Read Only - When we dont use the keyboard the Field will be Read only



--> Types of Testing -

		1. Functional Testing
		2. Non Functional Testing

1. Functional Testing - Related to Client Requirements

		- System Testing
		- Regression Testing
		- Smoke testing
		- Sanity Testing
    	- Unit Testing
    	- Integration Testing 
    	- Database Testing
    	- WhiteBox Testing
    	- BlackBox Testing
    	- Gray Box Testing 
    	- Monkey Testing 
    	- AdHoc Testing
    	- Componet Testing
    	- GUI Testing 
    	- End to End Testing
    	- UAT
    	    -Alpha
    	    -Beta 
    	- Acceptance Testing 
    	- Happy Path Testing 
    	- Negative Testing



2. Non Functional Testing - 

		1. Performance Testing - 
				
				- Load testing
				- Stress Testing
				- Volume Testing
		
		2. Security Testing - 

				- Penetration testing
				- SQL Injection
				- Vulnerability
				- Authentication testing
				- Username / Password
			
		3. Compatability Testing


		4. User Accessibility Testing - Making user friendly


-->> White Box Testing - 
		It is a technique in which software's internal structure. design, and coding are tested

		- This testing is also known as : 
					
					- Open Box Testing 
					- Transparent Testing

>> Who involves in this type of testing ?

	- Developer


>> What do we verify ?

1. Internal Security
2. Broken or poorly structured
3. The Flow 

>> White Box Testing Techniques

1. Statement Coverage
		- Coverage = (Number of Statement Exercised/Total Number of Statments) *100     

2. Branch Coverage

3. Condition Coverage
		- All the conditions should be covered



-->> Black Box Testing -
			Black Box Testing is a Software Testing Method in which the functionalities of Software are tested
			No need to have Knowledge of Internal Code or Design

>> Who involves in this type of testing ?

	- Tester

>> Black Box Testing Techniques

1. Equivalence Class Testing 
		- Minimize the Number of possible Test Cases

2. Boundary Value Testing oR BVA(Boundary Value Analysis)
		- Determines whether certain range of values are accepted for the system or not where an input is within certain range
		- We decide the Boundary
		- Focused on the values at the boundaries 

3. Decision Table Testing
		- It represents causes and their effects in a matrix

4. State Transition Testing
		- This Technique usually considers the state, outputs and inputs of a system during a specific period
		- It checks for the behavioral changes of a system in a particular state or another state while maintaining same inputs






>> Difference between White Box and Black Box Testing

White Box Testing

	- The developer performs 
	- Awareness about what the software is supposed to do, also how it does
	- To perform WBT, we should have an understanding of Programming
	- In this developer should have understanding of internal design


Black Box Testing

	- Tester performs
	- Need not be aware of what the software is supposed to do, also how it does
	- No need to have understanding of coding
	- No need to know Internal Design



-->> Grey Box Testing - 
				- Combination of Black Box and White Box Testing
				- It is a Software Testing Technique to set a Software Product or application 
				- We must have partial Knowledge of Internal Structure of the application 


>> Why do we perform Grey Box Testing ? 

		- It provides combined benefits of both BBT and WBT
		- It combines the input of developers as well as the Testers and improves overall quality of the product
		- It reduces the overhead of long process of testing Functional and Non Functional Types
		- It gives enough free time for the developer to fix the bugs
		- Testing is done from the users point of view rather than a designers point of view


>> Types of 



>> Difference between Black Box Testing, White Box Testing and Grey Box Testing

White Box Testing

	- The developer performs 
	- Awareness about what the software is supposed to do, also how it does
	- To perform WBT, we should have an understanding of Programming
	- In this developer should have understanding of internal design


Black Box Testing

	- Tester performs
	- Need not be aware of what the software is supposed to do, also how it does
	- No need to have understanding of coding
	- No need to know Internal Design


Grey Box Testing 
	
	- Both Testers and Developers performs
	- Need not be fully aware about what the software is supposed to do, also how it does
	- Need to have some knowledge and Understanding of Programming
	- Need to have partial knowledge of Internal Design 



Exercise :

	Test case for Users Table

Solution - 

	In Excel Sheet - User Table Test Case

Exercise :

	Test case for Request Table

Solution - 

	In Excel Sheet - Request Table Test Case




20/09/2022
----------


Exercise :

	Test case for Change Table

Solution - 

	In Excel Sheet - Change Request Test Case


Exercise :

	Test case for SLAs P1 Incident
	
	Response
	Resolution
	and Notifications


Solution -

	In the Excel Sheet - SLA Resolution and Response Test Case


		1. We need to test this by creating a new incident 
		2. Assignment Group and Assigned also adding Users / Groups to Watch List and Work Note List
		3. Priority : Upgrade / Downgrade
		4. Watch List, Worknotes : They should receive the Notifications
		5. Assigned to : Person should receive notification
		6. Caller : Should also receive Notifications
		7. The Incident must be taken through different stages of The Incident Life Cycle
		


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

21/09/2022
----------

ATF (Automated Testing framework)

Objectives of ATF -
	> To fasten up your digital transformation and perform quicker upgrades
Released in the Istanbul Version - 2017

>> Benefits of using ATF

	- Quicker go-to market with reduced test cycle
	- 80% decrease in time cost
	- Reduce man-hour from 5 days to less than 2 hours
	- Reports with real time screenshots
	- Creation of future test purpose Template
	- Improves quality of the product
	- Simpler test automation process
	- ATF increases the speed and reduces time taken
	- We can schedule the test case as per requirements
	- It will decrease the cost
	- Immediate Visibility in the test results with lesser risks and quicker remediation


>> Functions and Operations of ATF

	- Creating and running tests
	- Adding and deleting steps if required
	- Altering the order of execution 
	- Creating and running test suits 
	- Recording the details and enabling to view them with screenshots
	- Transiting the values from one step to next step
	- Changing the Administration settings

-->> Using these functionalities

	- Impersonate the user
	- Open a new form like the catalog task form
	- Set field values on the forms like assigned to and description or add field that does not exist
	- Submit the current form and confirm to Server


>> What is Test Framework doc

It is a set of guidelines or rules which is used for Creating and Designing Test Case
A framework is compromised of a combination of pratices and tools that are designed to help QA Professionals test more efficiently


>> Limitations

	- Yet to have test step configuration 
	- Does not have a manager or tester Roles
	

>> In Jakarta relaease it comprised of many new features, provided more flexibility of testing instance with "recorded at" which enabled to view transaction data for the automated results 


-->> Test Automation framework	

	- What is Automated Tested Framework doc


-->> Viewing Test and Test Step Results doc




Creating a New Test Case

	- Filter Navigator --> Automated Test Frameworks --> Test --> New

Enable Parameterized is checked when test case is used multiple times

Test Steps : Using this tab we will be able to add tests to the test case either any of the option that is add test step or add test Template

Test Result : This tab will be showing the test results once the test got executed

Mutually Exclusive Test : ServiceNow provides an option to run two test case parallelly
						  If we dont want to run two test cases parallelly we can add mutually exclusive so that these two test cases would not run parallelly

Copy Test : We can copy the existing test case


>> Enable the Run Button 

>> Add Test Case	
	- New Test Case	 - My Test 
	- Click on Form and Open New Form
	- Click next
	- Choose Incident Table
	- Run the Test
	
	- We can even add an existing record in the Test Case
	- The Execution Order can be changed 


>> To see in the Self Service View

	- Add New Test Case - My Test 2
	- Table Incident
	- View ESS 

>> To see in Agent Workspace View
	 
	 Change Form UI to Agent Workspace
	


>> Different Test Step configuration	

All Steps - Under this one System will be displaying all the step configuration available in different categories

Application Navigator - This can be used to verify the list

Custom UI - In this category we can validate the functionality of UI Elements in the Portal 
			Like Checking if the components are available or not	
			Whether it is Clickable elements or not
			What is Components state ?

Email - The System provides us an option of validating the inbound email and outbound email whether they are generated by a flow or a notification 
		We can check the subject line and if certain thing is available or not

Form - This section can be used to validate the forms and that classic like opening a form, opening an existing record, set field values, validating the field

Form in Service Portal - This Category can be used to open a certain form like opening an existing record, opening a form setting field values, field variable values, clicking on your reaction and then submitting the form
Form in Service Portal is similar to Custom UI

List and Related List - This category can be used to validate the functionality of the related list and the form and the dynamic filter or the list that populates when we click on new closed result

Reporting - This one can be used to related certain, what is available in the system or not ?

Responsive Dashboard - It can be used to check if a dashboard can be shared or a dashboard is visible or not 

Rest - Under this Category we can validate sent Rest Request Inbound, assert response time

Server - In this category we can validate the record from the server side 

Service Catalog in Service Portal - Under this the classic and portal view functionality coverage would be similar, but the regulation would be like opening a form in portal and setting field values




--> Test Case

	1. Open a New Form 
		- Table : Incident
	
	2. Set Field values 
		Caller - Abel Tuter
		Short Description - ""
	
	3. Submit the form 

	4. Open an Existing Recording
			- Using Data Pill Picker 
					- This shows the recently created record in the Incident
	

Assignment 

	Omit Step 3 in the previous and incident of using Data Pill Picker, open an existing incident

Solution : 

	1. Open a New Form 
		- Table : Incident
	
	2. Set Field values 
		Caller - Abel Tuter
		Short Description - ""
	

	3. Open an Existing Recording


>> Here the records of the incident is not stored as it goes to a Rollback during Testing




22/09/2022
----------


--> New Test Case - My Test 3

		- Add Test Step 
			- Form : Open a New Form
			- Table : Incident
		
		- Set Field values
			- Short Desc : "HI"
			- Caller : Abel Tuter

		- Test 

		- Now change the view to Agent Workspace and see the Difference
	


Different Types of View

ESS - Employee Self Service - End Users
Agent Workspace - Clients
Standard - Developers and Testers



--> New Test Case - My Test 4

		- Add Test Step
			- Form : Open a New Form 
			- Table : Incident
		
		- Add Test Step 
			- Field State Validation	
			- Visible : Number, Short Description
			- Not Visible : Expected start 
			- Read Only : Priority
			- Not Read Only : SubCategory
			- Mandatory : Caller
			- Not Mandatory : Assigned to 
		
		- Now Run Test

		- Do some Changes like 
			- Not Mandatory : Category 
		
		This is called Negative Testing
	



--> New Test Case - Change Test 

		- Add Test step
			- Form : Change
			- Table : change request
		
		- Add Field State Validation 
			- Visible : EverythinG from TC 001
			- Not Visible : Domain Path, Move From 
			- Read Only : Type, Conflict Status, Conflict Last Run
			- Not Read Only : Priority
		
		- Run Test 



--> New Test Case - Open Catalog Item

		- Add Test Step 
			- Service Catalog
			- Open Catalog Item 
			- Catalog Item - Any Catalog we want
		
		- Run Test 



--> New Test Case - Open Record Producer
		
		- Add Test Case
			- Service Catalog
			- Open Record Producer
			- Choose Any of the records

		
		- Run Test




--> What is Test Template - 

	An ATF test template is a reusable set of test steps that are commonly used together
	Test Templates can include any combination of test steps
	A template's test steps may require additional configuration once added to a test

--> Creating a Test Template
	Filter Navigator -> Test Templates -> Template 1

	Test Steps --> Impersonate
				   Open a New Form 
				   Set Field Value
				   Submit


--> Now create a New Test Case  - Test Template 

	Add Test Template - Template 1
	Add Table - Incident
	The Test Steps from the Test Template will import

	- Click Impersonate and Choose User 
	- Create a Form
	- Set Field values
	- Submit

We can add many Test Templates in a Test Case


-->> Test Suites

		Test suites are hierarchical, logical groupings of related tests and/or other test suites to run as a single job


How to access ?
	Filter Navigator -> Suites (under ATF) 


Creating New Test Suites ?
		- New 
			Name : Suite Test
		
		- Filter Condition 
			- Name contains Test
		
		- This will import 19 Tests

		- We can as well add Child Test Suites 
		
		- Run Test Suites


--> Difference Between Test Template and Test Suites

Test Template - Collection of Test Steps
Test Suites - Collection of Similar types of tests


--> Parallel Testing - We can run multiple test case at single time

We can open two test cases and run one in Normal browser and the other in Incognito Mode or in any other browser


--> Alpha Testing and Beta Testing

>> Alpha Testing 

	- Conducted from Developers End
	- Performed by Developer in Controlled Environment
	- Performed before Software is Released
	- Involves both Black Box and White Box Testing are involved

>> Beta Testing

	- Conducted at Users Place
	- Performed in an Environment not controlled by Developer
	- Performed after Software is Released 
	- Involves only Black Box Testing is involved
	